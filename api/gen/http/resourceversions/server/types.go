// Code generated by goa v3.1.3, DO NOT EDIT.
//
// resourceversions HTTP server types
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package server

import (
	resourceversions "github.com/tektoncd/hub/api/gen/resourceversions"
	goa "goa.design/goa/v3/pkg"
)

// ResourceversionsdetailResponseBody is the type of the "resourceversions"
// service "Resourceversionsdetail" endpoint HTTP response body.
type ResourceversionsdetailResponseBody []*ResourceversionResponse

// ResourceversionsdetailInternalErrorResponseBody is the type of the
// "resourceversions" service "Resourceversionsdetail" endpoint HTTP response
// body for the "internal-error" error.
type ResourceversionsdetailInternalErrorResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// ResourceversionResponse is used to define fields on response body types.
type ResourceversionResponse struct {
	// ID is the unique id of the resource
	ID uint `form:"id" json:"id" xml:"id"`
	// Name of the resource
	Name string `form:"name" json:"name" xml:"name"`
	// Type of catalog where resource belongs
	Catalog *CatalogResponse `form:"catalog" json:"catalog" xml:"catalog"`
	// Type of resource
	Type string `form:"type" json:"type" xml:"type"`
	// Tags related to resources
	Tags []*TagResponse `form:"tags" json:"tags" xml:"tags"`
	// Rating of resource
	Rating uint `form:"rating" json:"rating" xml:"rating"`
	// versions information of a resource
	Versions []*ResourceVersionInfoResponse `form:"versions" json:"versions" xml:"versions"`
}

// CatalogResponse is used to define fields on response body types.
type CatalogResponse struct {
	// ID is the unique id of the category
	ID uint `form:"id" json:"id" xml:"id"`
	// Type of support tier
	Type string `form:"type" json:"type" xml:"type"`
}

// TagResponse is used to define fields on response body types.
type TagResponse struct {
	// Id is the unique id of tags
	ID uint `form:"id" json:"id" xml:"id"`
	// name of tag
	Name string `form:"name" json:"name" xml:"name"`
}

// ResourceVersionInfoResponse is used to define fields on response body types.
type ResourceVersionInfoResponse struct {
	// resource version id
	ID uint `form:"id" json:"id" xml:"id"`
	// version name
	Version string `form:"version" json:"version" xml:"version"`
	// description of perticular version
	Description string `form:"description" json:"description" xml:"description"`
	// displayname of perticular version
	DisplayName string `form:"displayName" json:"displayName" xml:"displayName"`
	// github raw url of perticular veriosn of a resource
	RawURL string `form:"rawUrl" json:"rawUrl" xml:"rawUrl"`
	// github web url of perticular veriosn of a resource
	WebURL string `form:"webUrl" json:"webUrl" xml:"webUrl"`
	// Date when resource was last updated
	UpdatedAt string `form:"updatedAt" json:"updatedAt" xml:"updatedAt"`
}

// NewResourceversionsdetailResponseBody builds the HTTP response body from the
// result of the "Resourceversionsdetail" endpoint of the "resourceversions"
// service.
func NewResourceversionsdetailResponseBody(res []*resourceversions.Resourceversion) ResourceversionsdetailResponseBody {
	body := make([]*ResourceversionResponse, len(res))
	for i, val := range res {
		body[i] = marshalResourceversionsResourceversionToResourceversionResponse(val)
	}
	return body
}

// NewResourceversionsdetailInternalErrorResponseBody builds the HTTP response
// body from the result of the "Resourceversionsdetail" endpoint of the
// "resourceversions" service.
func NewResourceversionsdetailInternalErrorResponseBody(res *goa.ServiceError) *ResourceversionsdetailInternalErrorResponseBody {
	body := &ResourceversionsdetailInternalErrorResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewResourceversionsdetailResourceID builds a resourceversions service
// Resourceversionsdetail endpoint payload.
func NewResourceversionsdetailResourceID(resourceID int) *resourceversions.ResourceID {
	v := &resourceversions.ResourceID{}
	v.ResourceID = resourceID

	return v
}

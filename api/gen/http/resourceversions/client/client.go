// Code generated by goa v3.1.3, DO NOT EDIT.
//
// resourceversions client HTTP transport
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the resourceversions service endpoint HTTP clients.
type Client struct {
	// Resourceversionsdetail Doer is the HTTP client used to make requests to the
	// Resourceversionsdetail endpoint.
	ResourceversionsdetailDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the resourceversions service
// servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		ResourceversionsdetailDoer: doer,
		CORSDoer:                   doer,
		RestoreResponseBody:        restoreBody,
		scheme:                     scheme,
		host:                       host,
		decoder:                    dec,
		encoder:                    enc,
	}
}

// Resourceversionsdetail returns an endpoint that makes HTTP requests to the
// resourceversions service Resourceversionsdetail server.
func (c *Client) Resourceversionsdetail() goa.Endpoint {
	var (
		decodeResponse = DecodeResourceversionsdetailResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildResourceversionsdetailRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ResourceversionsdetailDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("resourceversions", "Resourceversionsdetail", err)
		}
		return decodeResponse(resp)
	}
}

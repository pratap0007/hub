// Code generated by goa v3.3.1, DO NOT EDIT.
//
// rating endpoints
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package rating

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "rating" service endpoints.
type Endpoints struct {
	Get    goa.Endpoint
	Update goa.Endpoint
}

// NewEndpoints wraps the methods of the "rating" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Get:    NewGetEndpoint(s),
		Update: NewUpdateEndpoint(s),
	}
}

// Use applies the given middleware to all the "rating" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Get = m(e.Get)
	e.Update = m(e.Update)
}

// NewGetEndpoint returns an endpoint function that calls the method "Get" of
// service "rating".
func NewGetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetPayload)
		return s.Get(ctx, p)
	}
}

// NewUpdateEndpoint returns an endpoint function that calls the method
// "Update" of service "rating".
func NewUpdateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*UpdatePayload)
		return nil, s.Update(ctx, p)
	}
}

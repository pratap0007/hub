// Code generated by goa v3.1.3, DO NOT EDIT.
//
// resourceversions endpoints
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package resourceversions

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "resourceversions" service endpoints.
type Endpoints struct {
	Resourceversionsdetail goa.Endpoint
}

// NewEndpoints wraps the methods of the "resourceversions" service with
// endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Resourceversionsdetail: NewResourceversionsdetailEndpoint(s),
	}
}

// Use applies the given middleware to all the "resourceversions" service
// endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Resourceversionsdetail = m(e.Resourceversionsdetail)
}

// NewResourceversionsdetailEndpoint returns an endpoint function that calls
// the method "Resourceversionsdetail" of service "resourceversions".
func NewResourceversionsdetailEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ResourceID)
		return s.Resourceversionsdetail(ctx, p)
	}
}

// Code generated by goa v3.1.3, DO NOT EDIT.
//
// resourceversions service
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package resourceversions

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The category service gives category details
type Service interface {
	// Get all versions information of a resource by resourceId
	Resourceversionsdetail(context.Context, *ResourceID) (res []*Resourceversion, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "resourceversions"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"Resourceversionsdetail"}

// ResourceID is the payload type of the resourceversions service
// Resourceversionsdetail method.
type ResourceID struct {
	// id of resource
	ResourceID int
}

type Resourceversion struct {
	// ID is the unique id of the resource
	ID uint
	// Name of the resource
	Name string
	// Type of catalog where resource belongs
	Catalog *Catalog
	// Type of resource
	Type string
	// Tags related to resources
	Tags []*Tag
	// Rating of resource
	Rating uint
	// versions information of a resource
	Versions []*ResourceVersionInfo
}

type Catalog struct {
	// ID is the unique id of the category
	ID uint
	// Type of support tier
	Type string
}

type Tag struct {
	// Id is the unique id of tags
	ID uint
	// name of tag
	Name string
}

type ResourceVersionInfo struct {
	// resource version id
	ID uint
	// version name
	Version string
	// description of perticular version
	Description string
	// displayname of perticular version
	DisplayName string
	// github raw url of perticular veriosn of a resource
	RawURL string
	// github web url of perticular veriosn of a resource
	WebURL string
	// Date when resource was last updated
	UpdatedAt string
}

// MakeInternalError builds a goa.ServiceError from an error.
func MakeInternalError(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "internal-error",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
